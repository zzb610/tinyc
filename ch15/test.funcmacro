; %define main.varc 1

; %macro main.var main.varc
;   %define a [ebp - 4*1]
;   sub esp, 4*main.vacc
; %endmacro

; %macro ENDFUNC@main 0
;   leave
;   ret
;   %undef a
; %endmacro

; %define sum.argc 2
; %define sum.varc 1

; %macro $sum 0
;   call @sum
;   add esp, 4*sum.argc
;   push eax
; %endmacro

; %macro sum.arg, sum.argc
;   %define a [ebp + 8 + 4*sum.argc - 4*1]
;   %define b [ebp + 8 + 4*sum.argc - 4*2]
; %endmacro

; %macro sum.var sum.varc
;   %define c [ebp - 4*1]
;   sub esp, 4*sum.varc
; %endmacro

; %macro ENDFUNC@sum()
;   leave
;   ret
;   %undef a
;   %undef b
;   %undef c
; %endmacro

; ==== begin function `main` ====
%define main.varc 1

%MACRO main.var main.varc
    %define a [EBP - 4*1]
    SUB ESP, 4*main.varc
%ENDMACRO

%MACRO ENDFUNC@main 0
    LEAVE
    RET
    %undef a
%ENDMACRO
; ==== end function `main`   ====

; ==== begin function `sum` ====
%define sum.argc 2
%define sum.varc 1

%MACRO $sum 0
    CALL @sum
    ADD ESP, 4*sum.argc
    PUSH EAX
%ENDMACRO

%MACRO sum.arg sum.argc
    %define a [EBP + 8 + 4*sum.argc - 4*1]
    %define b [EBP + 8 + 4*sum.argc - 4*2]
%ENDMACRO

%MACRO sum.var sum.varc
    %define c [EBP - 4*1]
    SUB ESP, 4*sum.varc
%ENDMACRO

%MACRO ENDFUNC@sum 0
    LEAVE
    RET
    %undef a
    %undef b
    %undef c
%ENDMACRO
; ==== end function `sum`  ====